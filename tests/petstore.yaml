openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
            example: 100
        - name: page
          in: query
          description: The page number to retrieve
          required: false
          schema:
            type: integer
            format: int32
            example: 0
      responses:
        '200':
          description: A paged array of pets
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
            example:
              name: "Rover"
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: getPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: integer
            format: int64
        - name: expand
          in: query
          description: Whether to expand the pet details
          required: false
          schema:
            type: string
            example: "owner"
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
  /pets/{petId}/owner:
    get:
      summary: Info for a specific pet's owner
      operationId: getOwnerByPetId
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: integer
            format: int64
        - name: expand
          in: query
          description: Whether to expand the owner details
          required: false
          schema:
            type: string
            example: "address"
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetOwner"
  /petsHeader:
    get:
      summary: List all pets with header
      operationId: listPetsHeader
      tags:
        - pets
      parameters:
        - name: limit
          in: header
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
            example: 100
        - name: page
          in: header
          description: The page number to retrieve
          required: false
          schema:
            type: integer
            format: int32
            example: 0
      responses:
        '200':
          description: A paged array of pets
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        owner:
          $ref: "#/components/schemas/PetOwner"
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    PetOwner:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          $ref: "#/components/schemas/OwnerAddress"
    OwnerAddress:
      type: object
      required:
        - street
        - city
        - state
        - zip
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

